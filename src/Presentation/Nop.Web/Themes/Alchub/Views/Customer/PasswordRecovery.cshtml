@model PasswordRecoveryModel
@inject IThemeContext themeContext

@{
    Layout = "_ColumnsOne";

    //title
    NopHtml.AddTitleParts(T("PageTitle.PasswordRecovery").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-password-recovery-page");
}

@{
    var themeName = await themeContext.GetWorkingThemeNameAsync();
}

<div class="page password-recovery-page">
   
    <div class="row">
        <div class="col-xl-6 col-lg-8 px-0 m-auto">
            <div class="page-title">
                <h1>@T("Account.PasswordRecovery")</h1>
            </div>
            <div class="page-body">
                <form asp-route="PasswordRecovery" method="post">
                    <div asp-validation-summary="ModelOnly" class="message-error"></div>
                    <div class="fieldset">    
                        <div class="form-fields">
                            <p class="tooltip">@T("Account.PasswordRecovery.Tooltip")</p>
                            <div class="inputs">
                                <label asp-for="Email" asp-postfix=":"></label>
                                <input asp-for="Email" class="email" />
                                <nop-required />
                                <span asp-validation-for="Email"></span>
                            </div>
                        </div>
                        @if (Model.DisplayCaptcha)
                        {
                            <nop-captcha />
                        }
                        <div class="buttons">
                            <button type="submit" name="send-email" class="button-1 password-recovery-button">@T("Account.PasswordRecovery.RecoverButton")</button>
                        </div>
                    </div>
                   
                </form>
            </div>
        </div>
    </div>
</div>
